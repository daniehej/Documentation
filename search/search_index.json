{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"User documentation - CLAAUDIA New Compute Cloud Strato Hello and welcome to the documentation for the CLAAUDIA Cloud. The documentation is targeted at our Strato project. To get valuable feedback from the Strato phase CLAAUDIA expects the following of the users You must not use AAU sensitive or GDPR restricted data for now There will NOT be made backup of the data you upload to the cloud, so do not delete your own copy. The data is safe in the cloud, as the storage system replicates it. There is just no additional backup, so if you by accident delete it from the cloud, it will be gone, and needs to be re-uploaded. You will have full ownership of the instance you create and can therefore install additional software, tweak it, or use it as is. Important difference from old Strato You cannot (and should) not create floating IPs. You can choose either to a have a locally routed IP (preferred) or a globally routed IP. Please see the Quick start guide further down for details on how. What is CLAAUDIA Compute Cloud Strato CLAAUDIA Compute Cloud Strato is a compute cloud hosted at AAU. The cloud is based on OpenStack. A user can launch multiple instances based on different flavors and images. The flavour is the computing resource and the image is the OS+software. Flavour Name Type VCPUs RAM Disk cpu.small CPU focused 8 16GB 100GB cpu.large CPU focused 32 64GB 100GB cpu.xlarge CPU focused 64 128GB 100GB mem.small Memory focused 4 32GB 100GB mem.medium Memory focused 8 64GB 100GB mem.large Memory focused 16 128GB 100GB mem.xlarge Memory focused 32 256GB 100GB gpu.t4-large Nvidia T4 GPU 10 40GB 100GB We recommend that you start with one of the smaller instances, and then resize your instance later if needed. Similar, if you need more space you add additional storage . When you start you will receive the following quota (there are more detail, but likely the most important): Type Limit Instances 5 VCPUS 20 RAM 500GB Volumes 10 Volume storage 10TB This quota will not allow you to create some of the larger instances in Strato-new. If you need to have say more CPUs, please write an email to support@its.aau.dk . Students should have their supervisors' approval (either let the supervisor write to support@its.aau.dk or let them acknowledge into an existing case). Quick-start - Your first instance Follow the guide to get your first Ubuntu instance up and running in minutes! The guide will take you through the steps of logging into the cloud, setting up an Ubuntu instance and accessing the instance with SSH. Quick-start - Your first instance Prebuilt image documentation In Strato, a range of different pre-built images will be available. For now, we only have two images: Image list Image Name Version Use case Guide Ubuntu 18.04 Bionic Beaver 18.04 LTS Cloud Base-ubuntu-image for the user to build upon. Ubuntu cloud Ubuntu 20.04 Focal Fossa 20.04 LTS Cloud Base-ubuntu-image for the user to build upon. Ubuntu cloud To get a GPU working using the flavor gpu.t4-large, you can follow this guide Custom images In addition to the pre-built Ubuntu images, we provide some instructions here for installing requested software in the pre-built images, until we can offer more pre-built images with that software installed. MATLAB ANACONDA3 Cloud guides Learn about more advanced Openstack features E.g. deleting instances, releasing IPs or using the openstack CLI. CLAAUDIA Compute Cloud Strato glossary Copy data from the old Strato to new Strato Openstack CLI Stop, pause & delete instances Custom volume size Custom security groups Save instances as image Using Windows Command Prompt Attaching a volume for additional storage Resizing an instance Running long simulations Remote desktop using X2Go and Xfce Discussion Forum To support as many as possible we have created a Yammer Compute Cloud Group . The Yammer Compute Cloud Group is a forum to ask questions and share tips/tricks. The idea is to answer questions once, but let everyone benefit from it. Yammer Compute Cloud Group Support Direct support is also possible. Please ask your question by submitting an email to support@its.aau.dk","title":"Home"},{"location":"#user-documentation-claaudia-new-compute-cloud-strato","text":"Hello and welcome to the documentation for the CLAAUDIA Cloud. The documentation is targeted at our Strato project. To get valuable feedback from the Strato phase CLAAUDIA expects the following of the users You must not use AAU sensitive or GDPR restricted data for now There will NOT be made backup of the data you upload to the cloud, so do not delete your own copy. The data is safe in the cloud, as the storage system replicates it. There is just no additional backup, so if you by accident delete it from the cloud, it will be gone, and needs to be re-uploaded. You will have full ownership of the instance you create and can therefore install additional software, tweak it, or use it as is.","title":"User documentation - CLAAUDIA New Compute Cloud Strato"},{"location":"#important-difference-from-old-strato","text":"You cannot (and should) not create floating IPs. You can choose either to a have a locally routed IP (preferred) or a globally routed IP. Please see the Quick start guide further down for details on how.","title":"Important difference from old Strato"},{"location":"#what-is-claaudia-compute-cloud-strato","text":"CLAAUDIA Compute Cloud Strato is a compute cloud hosted at AAU. The cloud is based on OpenStack. A user can launch multiple instances based on different flavors and images. The flavour is the computing resource and the image is the OS+software. Flavour Name Type VCPUs RAM Disk cpu.small CPU focused 8 16GB 100GB cpu.large CPU focused 32 64GB 100GB cpu.xlarge CPU focused 64 128GB 100GB mem.small Memory focused 4 32GB 100GB mem.medium Memory focused 8 64GB 100GB mem.large Memory focused 16 128GB 100GB mem.xlarge Memory focused 32 256GB 100GB gpu.t4-large Nvidia T4 GPU 10 40GB 100GB We recommend that you start with one of the smaller instances, and then resize your instance later if needed. Similar, if you need more space you add additional storage . When you start you will receive the following quota (there are more detail, but likely the most important): Type Limit Instances 5 VCPUS 20 RAM 500GB Volumes 10 Volume storage 10TB This quota will not allow you to create some of the larger instances in Strato-new. If you need to have say more CPUs, please write an email to support@its.aau.dk . Students should have their supervisors' approval (either let the supervisor write to support@its.aau.dk or let them acknowledge into an existing case).","title":"What is CLAAUDIA Compute Cloud Strato"},{"location":"#quick-start-your-first-instance","text":"Follow the guide to get your first Ubuntu instance up and running in minutes! The guide will take you through the steps of logging into the cloud, setting up an Ubuntu instance and accessing the instance with SSH. Quick-start - Your first instance","title":"Quick-start - Your first instance"},{"location":"#prebuilt-image-documentation","text":"In Strato, a range of different pre-built images will be available. For now, we only have two images:","title":"Prebuilt image documentation"},{"location":"#image-list","text":"Image Name Version Use case Guide Ubuntu 18.04 Bionic Beaver 18.04 LTS Cloud Base-ubuntu-image for the user to build upon. Ubuntu cloud Ubuntu 20.04 Focal Fossa 20.04 LTS Cloud Base-ubuntu-image for the user to build upon. Ubuntu cloud To get a GPU working using the flavor gpu.t4-large, you can follow this guide","title":"Image list"},{"location":"#custom-images","text":"In addition to the pre-built Ubuntu images, we provide some instructions here for installing requested software in the pre-built images, until we can offer more pre-built images with that software installed. MATLAB ANACONDA3","title":"Custom images"},{"location":"#cloud-guides","text":"Learn about more advanced Openstack features E.g. deleting instances, releasing IPs or using the openstack CLI. CLAAUDIA Compute Cloud Strato glossary Copy data from the old Strato to new Strato Openstack CLI Stop, pause & delete instances Custom volume size Custom security groups Save instances as image Using Windows Command Prompt Attaching a volume for additional storage Resizing an instance Running long simulations Remote desktop using X2Go and Xfce","title":"Cloud guides"},{"location":"#discussion-forum","text":"To support as many as possible we have created a Yammer Compute Cloud Group . The Yammer Compute Cloud Group is a forum to ask questions and share tips/tricks. The idea is to answer questions once, but let everyone benefit from it. Yammer Compute Cloud Group","title":"Discussion Forum"},{"location":"#support","text":"Direct support is also possible. Please ask your question by submitting an email to support@its.aau.dk","title":"Support"},{"location":"about/","text":"ABOUT CLAAUDIA - RESEARCH DATA SERVICES CLAAUDIA is an infrastructure (i.e. an organizational team and line of virtual services) that is a strategic venture realizing vital parts of the digitalisation strategy for the university. The strategy was adopted in January 2018. The overall aim of the infrastructure is to assist researchers and management in achieving the university's research goals by ensuring availability, utilization, and guidance in the use of modern state-of-the-art research infrastructure, support and advice, training and communication, coordination and policies. The deliverables of the project are also intended for availablity to students and can be used in the digital support of PBL. We have put together highly skilled staff from IT Services and the University Library, who work in close collaboration with the research teams and management at AAU. The project is governed by a steering group headed by K\u00e5re Lehmann Nielsen, professor with special responsiblities.","title":"About"},{"location":"about/#about-claaudia-research-data-services","text":"CLAAUDIA is an infrastructure (i.e. an organizational team and line of virtual services) that is a strategic venture realizing vital parts of the digitalisation strategy for the university. The strategy was adopted in January 2018. The overall aim of the infrastructure is to assist researchers and management in achieving the university's research goals by ensuring availability, utilization, and guidance in the use of modern state-of-the-art research infrastructure, support and advice, training and communication, coordination and policies. The deliverables of the project are also intended for availablity to students and can be used in the digital support of PBL. We have put together highly skilled staff from IT Services and the University Library, who work in close collaboration with the research teams and management at AAU. The project is governed by a steering group headed by K\u00e5re Lehmann Nielsen, professor with special responsiblities.","title":"ABOUT CLAAUDIA - RESEARCH DATA SERVICES"},{"location":"cloud_glossary/","text":"CLAAUDIA Compute Cloud Strato glossary. Instance Instances are virtual machines that run inside the cloud. The instance requires a volume attached. Volume A volume is a detachable block storage device, similar to a USB hard drive. You can attach a single volume to only one instance. Volumes can be stored after an instance is deleted, used to spin up new instances, backup and made into a cloud image. Flavour In CLAAUDIA Compute Cloud, flavors define the compute, memory, and storage capacity of your instances. To put it simply, a flavor is an available hardware configuration for a server. It defines the size of a virtual server that can be launched. Key-pair The best way to provide secure and easy access to your Cloud instances is through the use of key pairs for SSH authentication. Key pairs are made up of a private key that only you know, and a public key that is distributed to people and systems with which you would like to have secure communications. The Compute Cloud allows you to easily generate or upload such key pairs to use with your instances. When you create a new instance, you should specify a key pair to be used for logging in to that instance. You can only add a key pair to an instance at the time of its creation, not afterwards, so it is important not to overlook this step. It is possible to generate a new key pair during the process of creating an instance. Networks When starting an instance, you can select between Campus Network 01 and AAU Public . Campus Network 01: If you are in doubt select Campus Network 01 . The instance will be associated to an 10.92. . IP that you can access when at campus or using VPN. AAU Public: The instance will be associated to a global accessible IP 130. . .*. This can be if you are interested in having an instance that is globally accessible for e.g. hosting a webservice, copying data from another university etc. Be aware that this poses a higher security risk. Security Groups Security Groups allow control over the types of communication that are possible between a Cloud instance and the internet. A security group is a collection of rules, each of which specifies that internet traffic will be allowed to come from (ingress) or go to (egress) a set of Internet Protocol (IP) addresses through a given set of ports. The permissions given by these rules accumulate to form the net effect of the security group. Multiple security groups can be assigned to an instance, and the permissions from multiple groups also accumulate.","title":"Cloud glossary"},{"location":"cloud_glossary/#claaudia-compute-cloud-strato-glossary","text":"","title":"CLAAUDIA Compute Cloud Strato glossary."},{"location":"cloud_glossary/#instance","text":"Instances are virtual machines that run inside the cloud. The instance requires a volume attached.","title":"Instance"},{"location":"cloud_glossary/#volume","text":"A volume is a detachable block storage device, similar to a USB hard drive. You can attach a single volume to only one instance. Volumes can be stored after an instance is deleted, used to spin up new instances, backup and made into a cloud image.","title":"Volume"},{"location":"cloud_glossary/#flavour","text":"In CLAAUDIA Compute Cloud, flavors define the compute, memory, and storage capacity of your instances. To put it simply, a flavor is an available hardware configuration for a server. It defines the size of a virtual server that can be launched.","title":"Flavour"},{"location":"cloud_glossary/#key-pair","text":"The best way to provide secure and easy access to your Cloud instances is through the use of key pairs for SSH authentication. Key pairs are made up of a private key that only you know, and a public key that is distributed to people and systems with which you would like to have secure communications. The Compute Cloud allows you to easily generate or upload such key pairs to use with your instances. When you create a new instance, you should specify a key pair to be used for logging in to that instance. You can only add a key pair to an instance at the time of its creation, not afterwards, so it is important not to overlook this step. It is possible to generate a new key pair during the process of creating an instance.","title":"Key-pair"},{"location":"cloud_glossary/#networks","text":"When starting an instance, you can select between Campus Network 01 and AAU Public . Campus Network 01: If you are in doubt select Campus Network 01 . The instance will be associated to an 10.92. . IP that you can access when at campus or using VPN. AAU Public: The instance will be associated to a global accessible IP 130. . .*. This can be if you are interested in having an instance that is globally accessible for e.g. hosting a webservice, copying data from another university etc. Be aware that this poses a higher security risk.","title":"Networks"},{"location":"cloud_glossary/#security-groups","text":"Security Groups allow control over the types of communication that are possible between a Cloud instance and the internet. A security group is a collection of rules, each of which specifies that internet traffic will be allowed to come from (ingress) or go to (egress) a set of Internet Protocol (IP) addresses through a given set of ports. The permissions given by these rules accumulate to form the net effect of the security group. Multiple security groups can be assigned to an instance, and the permissions from multiple groups also accumulate.","title":"Security Groups"},{"location":"guides/quick-start/","text":"CLAAUDIA Compute Cloud Strato - Quick start Follow four steps to setup your first cloud instance and shelve, delete ot create an image when you're done. We will launch an instance with a gp.small flavour(2 vCPUs, 4GB RAM and 40GB storage) based on the Ubuntu 18.04 image (Ubuntu 18.04 LTS + AAU specific setup) and connect to it with SSH (you will need to be located at AAU or use e.g. VPN ). Image Compute Resources Accessible Ubuntu 18.04 image gp.small From the internet Login to the Cloud Setup Ubuntu cloud instance Access the instance Shelve or delete an image Login to the Cloud To access the compute cloud go to https://strato-new.claaudia.aau.dk with your favorite browser. Ensure the Authenticate Using is set to WAYF and click Connect . You will be redirected to signon.aau.dk/... where you must login with your aau email and password, click LOGIN and now you should be send to the cloud dashboard. Setup an Ubuntu cloud instance To create the ubuntu instance, common settings must be sat first. To access the ubuntu instance with SSH, port 22 must be open, furthermore an SSH Key-pair must be generated as login credentials. SSH rule The compute cloud configures port access with Security groups . Each group can have a number of rules to permit access. Follow the steps to add port 22(for SSH) to the default security group. Navigate to Network Click the sub menu Security Groups Click Manage Rules on the default Security group Add a rule Choose SSH from dropdown menu. Set SSH Key-pair The compute cloud authenticates per default instances with a SSH keypair. Follow the steps to generate the key-pair we later will use to access the Ubuntu instance Navigate to Compute Click on the sub menu Key Pairs Add new Key Pair Fill out name and select SSH Key Save the public key locally (you will need in later). Launch Ubuntu instance To launch the Ubuntu instance navigate to the \"launch instance\" menu using the webinterface. Navigate to the project tab. Click the Compute sub-tab. Click on Images . Press Launch on the right side of the image you wish to Launch. In the launch instance menu you can set settings for the instance. To launch your first ubuntu instance the following menu's settings must be applied. Details Choose an instance name. flavour Apply the gp.small compute resource for a small first instance. networks Select \"Campus Network 01\". If you are interested in having an instance that is globally accessible for e.g. hosting a webservice, copying data from another university etc., and hence also at a higher security risk, then select \"AAU Public\". Only associate one of the two networks to your instance. If you associate both; it will not work without considerable additional effort not documented here. security groups Ensure that the default security group we edited earlier is applied (should be as default). key-pair Ensure that the key-pair created earlier is applied (should be as default). Access the instance The default way of accessing is via SSH. The default username is ubuntu for the Ubuntu 18.04 image we chose. Use the key-pair we generated earlier in the guide as following to access the instance. On mac/linux open the terminal on windows open PowerShell or Command Prompt ssh ubuntu@10.92.0.zzz -i yourPersonalKey.pem Remember, you need to be on the AAU network using e.g. VPN. If you get a \"Connection timed out\" error then the error is likely due to not being on the network - connect using your VPN client and try again. Congratulations! You've successfully created your first cloud instance! If you don't plan to use this ubuntu 18_04 instance, please delete it On some platforms/tools you might receive an error, saying that Permissions are too open. This can be adjusted with either setting the right permissions for the file or move the file to a specific folder. Mac/Linux chmod 600 yourPublicKey.pem and then try to connect again. Windows Move the SSH key to the \".ssh\" folder located in the home directory, for example 'C:\\User\\adf.ssh' to set the right permissioins and then try to connect again. Shelve or delete an image If you dont need the instance right now, but maybe sometime soon again, you can shelve the instance. Then others can use the HW in the meantime such that we can get a good overall utilization of the platform. You can then unshelve when you need to work on the instance. Navigate to the project tab Click the Compute sub-tab Click on Instances Find the instance and the Action roll down. Select \"Shelve instance\". After a bit of time, the Status should be \"Shelved Offloaded\" When you need the instance again - select \"Unshelve instance\" under the Actions roll-down. If you are done using your instance, then you can delete it. Navigate to the project tab Click the Compute sub-tab Click on Instances Mark the checkbox of the instance you wish to delete. Press Delete Instances on the right side of the webpage. press Delete Instances in the confirmation dialog.","title":"Quick start"},{"location":"guides/quick-start/#claaudia-compute-cloud-strato-quick-start","text":"Follow four steps to setup your first cloud instance and shelve, delete ot create an image when you're done. We will launch an instance with a gp.small flavour(2 vCPUs, 4GB RAM and 40GB storage) based on the Ubuntu 18.04 image (Ubuntu 18.04 LTS + AAU specific setup) and connect to it with SSH (you will need to be located at AAU or use e.g. VPN ). Image Compute Resources Accessible Ubuntu 18.04 image gp.small From the internet Login to the Cloud Setup Ubuntu cloud instance Access the instance Shelve or delete an image","title":"CLAAUDIA Compute Cloud Strato - Quick start"},{"location":"guides/quick-start/#login-to-the-cloud","text":"To access the compute cloud go to https://strato-new.claaudia.aau.dk with your favorite browser. Ensure the Authenticate Using is set to WAYF and click Connect . You will be redirected to signon.aau.dk/... where you must login with your aau email and password, click LOGIN and now you should be send to the cloud dashboard.","title":"Login to the Cloud"},{"location":"guides/quick-start/#setup-an-ubuntu-cloud-instance","text":"To create the ubuntu instance, common settings must be sat first. To access the ubuntu instance with SSH, port 22 must be open, furthermore an SSH Key-pair must be generated as login credentials.","title":"Setup an Ubuntu cloud instance"},{"location":"guides/quick-start/#ssh-rule","text":"The compute cloud configures port access with Security groups . Each group can have a number of rules to permit access. Follow the steps to add port 22(for SSH) to the default security group. Navigate to Network Click the sub menu Security Groups Click Manage Rules on the default Security group Add a rule Choose SSH from dropdown menu.","title":"SSH rule"},{"location":"guides/quick-start/#set-ssh-key-pair","text":"The compute cloud authenticates per default instances with a SSH keypair. Follow the steps to generate the key-pair we later will use to access the Ubuntu instance Navigate to Compute Click on the sub menu Key Pairs Add new Key Pair Fill out name and select SSH Key Save the public key locally (you will need in later).","title":"Set SSH Key-pair"},{"location":"guides/quick-start/#launch-ubuntu-instance","text":"To launch the Ubuntu instance navigate to the \"launch instance\" menu using the webinterface. Navigate to the project tab. Click the Compute sub-tab. Click on Images . Press Launch on the right side of the image you wish to Launch. In the launch instance menu you can set settings for the instance. To launch your first ubuntu instance the following menu's settings must be applied. Details Choose an instance name. flavour Apply the gp.small compute resource for a small first instance. networks Select \"Campus Network 01\". If you are interested in having an instance that is globally accessible for e.g. hosting a webservice, copying data from another university etc., and hence also at a higher security risk, then select \"AAU Public\". Only associate one of the two networks to your instance. If you associate both; it will not work without considerable additional effort not documented here. security groups Ensure that the default security group we edited earlier is applied (should be as default). key-pair Ensure that the key-pair created earlier is applied (should be as default).","title":"Launch Ubuntu instance"},{"location":"guides/quick-start/#access-the-instance","text":"The default way of accessing is via SSH. The default username is ubuntu for the Ubuntu 18.04 image we chose. Use the key-pair we generated earlier in the guide as following to access the instance. On mac/linux open the terminal on windows open PowerShell or Command Prompt ssh ubuntu@10.92.0.zzz -i yourPersonalKey.pem Remember, you need to be on the AAU network using e.g. VPN. If you get a \"Connection timed out\" error then the error is likely due to not being on the network - connect using your VPN client and try again. Congratulations! You've successfully created your first cloud instance! If you don't plan to use this ubuntu 18_04 instance, please delete it On some platforms/tools you might receive an error, saying that Permissions are too open. This can be adjusted with either setting the right permissions for the file or move the file to a specific folder.","title":"Access the instance"},{"location":"guides/quick-start/#maclinux","text":"chmod 600 yourPublicKey.pem and then try to connect again.","title":"Mac/Linux"},{"location":"guides/quick-start/#windows","text":"Move the SSH key to the \".ssh\" folder located in the home directory, for example 'C:\\User\\adf.ssh' to set the right permissioins and then try to connect again.","title":"Windows"},{"location":"guides/quick-start/#shelve-or-delete-an-image","text":"If you dont need the instance right now, but maybe sometime soon again, you can shelve the instance. Then others can use the HW in the meantime such that we can get a good overall utilization of the platform. You can then unshelve when you need to work on the instance. Navigate to the project tab Click the Compute sub-tab Click on Instances Find the instance and the Action roll down. Select \"Shelve instance\". After a bit of time, the Status should be \"Shelved Offloaded\" When you need the instance again - select \"Unshelve instance\" under the Actions roll-down. If you are done using your instance, then you can delete it. Navigate to the project tab Click the Compute sub-tab Click on Instances Mark the checkbox of the instance you wish to delete. Press Delete Instances on the right side of the webpage. press Delete Instances in the confirmation dialog.","title":"Shelve or delete an image"},{"location":"guides/Image-guides/","text":"Learn about more advanced OpenStack features E.g. deleting instances, releasing IPs or using the OpenStack CLI.","title":"Index"},{"location":"guides/Image-guides/anaconda/anaconda/","text":"Installing Anaconda We will install a version of Anaconda by downloading a specific version of Anaconda, install and add the binaries to the PATH: anacondaType = Anaconda3-2021.11-Linux-x86_64.sh wget -q https://repo.anaconda.com/archive/ $anacondaType chmod +x $anacondaType ./ $anacondaType -b -p sudo rm -f $anacondaType export PATH = \" $HOME /anaconda3/bin: $PATH \" conda init bash If you like to access a jupyter notebook on the machine, you need to Add port 8888 as custom rule to a Security Group, see this guide Start the service jupyter notebook --ip 0 .0.0.0 The latter argument is to allow for access from other than the host itself. Point your browser to e.g. 10.92.0.55:8888 and login using the token shown in the output when starting the jupyter notebook.","title":"Anaconda3"},{"location":"guides/Image-guides/anaconda/anaconda/#installing-anaconda","text":"We will install a version of Anaconda by downloading a specific version of Anaconda, install and add the binaries to the PATH: anacondaType = Anaconda3-2021.11-Linux-x86_64.sh wget -q https://repo.anaconda.com/archive/ $anacondaType chmod +x $anacondaType ./ $anacondaType -b -p sudo rm -f $anacondaType export PATH = \" $HOME /anaconda3/bin: $PATH \" conda init bash If you like to access a jupyter notebook on the machine, you need to Add port 8888 as custom rule to a Security Group, see this guide Start the service jupyter notebook --ip 0 .0.0.0 The latter argument is to allow for access from other than the host itself. Point your browser to e.g. 10.92.0.55:8888 and login using the token shown in the output when starting the jupyter notebook.","title":"Installing Anaconda"},{"location":"guides/Image-guides/comsol/comsol/","text":"Welcome to MkDocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Welcome to MkDocs"},{"location":"guides/Image-guides/comsol/comsol/#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"guides/Image-guides/comsol/comsol/#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"guides/Image-guides/comsol/comsol/#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"guides/Image-guides/matlab/matlab/","text":"Installing Matlab For this guide, you need an Ubuntu 18.04 or 20.04 instance in Strato as explained here . Please make sure your instance is running and familiarise yourself with connecting to it before you follow this guide. The following steps explain how to install Matlab into a Strato instance and activate your license for it. Visit ITS' MATLAB license information . Follow the instructions under \"Download MathWorks\" and find the license key under \"Licens\". The latter is in Danish; if you are a student, use \"Licensefil for STUDERENDE\". If you are employed (including PhD student), use \"Licensefil for ANSATTE\". Follow the information shown there to download the MATLAB installer. On MathWorks' download page, select \"Download for Linux\" (remember to change this option if it says for example \"Download for MacOS\"). Save the downloaded file to your local computer and note where you save it. Copy the downloaded file (probably called \"matlab_R2021b_glnxa64.zip\") to your Strato instance. This can be done from the command line (in Linux, MacOS, or Windows). Use the same identity file for logging in as described for SSH access in the Quick Start guide ): scp -i [ path your identity file ] [ path to your downloaded file ] ubuntu@ [ IP address of your Strato instance ] :/home/ubuntu A concrete example could be: scp -i yourPersonalKey.pem matlab_R2021b_glnxa64.zip ubuntu@10.92.0.113:/home/ubuntu Log into your Strato instance using SSH: ssh -X -i [ your identity file ] ubuntu@ [ IP address of your Strato instance ] You should now be able to see your uploaded MATLAB install file, if you type ls to view the contents of the current directory. The following steps should be carried out on your Strato instance which you have just logged into using SSH. Install X: sudo apt install xorg This can take quite some time. Enable X forwarding for the root user: sudo cp ~/.Xauthority ~root/.Xauthority Install the unzip command in your instance: sudo apt install unzip Uncompress the MATLAB installer: unzip matlab_R2021b_glnxa64.zip -d matlab_install Note that the name of your MATLAB installer zip file may be different, if you downloaded a different version of MATLAB than in this example. Run the MATLAB installer: sudo matlab_install/install Follow the instructions in the installer to log into your MathWorks account and activate your license obtained in step 1. You can also select which MATLAB toolboxes you wish to install. Select the default path for installing MATLAB and in the final step, select \"Begin Install\". You should now be able to run MATLAB from the command line by typing matlab .","title":"Matlab 2019b"},{"location":"guides/Image-guides/matlab/matlab/#installing-matlab","text":"For this guide, you need an Ubuntu 18.04 or 20.04 instance in Strato as explained here . Please make sure your instance is running and familiarise yourself with connecting to it before you follow this guide. The following steps explain how to install Matlab into a Strato instance and activate your license for it. Visit ITS' MATLAB license information . Follow the instructions under \"Download MathWorks\" and find the license key under \"Licens\". The latter is in Danish; if you are a student, use \"Licensefil for STUDERENDE\". If you are employed (including PhD student), use \"Licensefil for ANSATTE\". Follow the information shown there to download the MATLAB installer. On MathWorks' download page, select \"Download for Linux\" (remember to change this option if it says for example \"Download for MacOS\"). Save the downloaded file to your local computer and note where you save it. Copy the downloaded file (probably called \"matlab_R2021b_glnxa64.zip\") to your Strato instance. This can be done from the command line (in Linux, MacOS, or Windows). Use the same identity file for logging in as described for SSH access in the Quick Start guide ): scp -i [ path your identity file ] [ path to your downloaded file ] ubuntu@ [ IP address of your Strato instance ] :/home/ubuntu A concrete example could be: scp -i yourPersonalKey.pem matlab_R2021b_glnxa64.zip ubuntu@10.92.0.113:/home/ubuntu Log into your Strato instance using SSH: ssh -X -i [ your identity file ] ubuntu@ [ IP address of your Strato instance ] You should now be able to see your uploaded MATLAB install file, if you type ls to view the contents of the current directory. The following steps should be carried out on your Strato instance which you have just logged into using SSH. Install X: sudo apt install xorg This can take quite some time. Enable X forwarding for the root user: sudo cp ~/.Xauthority ~root/.Xauthority Install the unzip command in your instance: sudo apt install unzip Uncompress the MATLAB installer: unzip matlab_R2021b_glnxa64.zip -d matlab_install Note that the name of your MATLAB installer zip file may be different, if you downloaded a different version of MATLAB than in this example. Run the MATLAB installer: sudo matlab_install/install Follow the instructions in the installer to log into your MathWorks account and activate your license obtained in step 1. You can also select which MATLAB toolboxes you wish to install. Select the default path for installing MATLAB and in the final step, select \"Begin Install\". You should now be able to run MATLAB from the command line by typing matlab .","title":"Installing Matlab"},{"location":"guides/Image-guides/the-littlest-jupyterhub/the-littlest-jupyterhub/","text":"Installing the littlest jupyterhub Make sure you have python3, python3-dev, curl and git installed. sudo apt install python3 python3-dev git curl Copy the text below, and paste it into the terminal. Replace with the name of the first admin user for this JupyterHub. Choose any name you like (don\u2019t forget to remove the brackets!). This admin user can log in after the JupyterHub is set up, and can configure it to their needs. Remember to add your username! curl -L https://tljh.jupyter.org/bootstrap.py | sudo -E python3 - --admin <admin-user-name> Press Enter to start the installation process. This will take 5-10 minutes, and will say Done! when the installation process is complete Copy the Public IP or campus IP of your server, and try accessing http:// from your browser. If everything went well, this should give you a JupyterHub login page. Login using the admin user name you used in step 3. You can choose any password that you wish. Use a strong password & note it down somewhere, since this will be the password for the admin user account from now on. For more information see the official \"the littlest jupyterhub\" docs .","title":"The littlest jupyterhub"},{"location":"guides/Image-guides/the-littlest-jupyterhub/the-littlest-jupyterhub/#installing-the-littlest-jupyterhub","text":"Make sure you have python3, python3-dev, curl and git installed. sudo apt install python3 python3-dev git curl Copy the text below, and paste it into the terminal. Replace with the name of the first admin user for this JupyterHub. Choose any name you like (don\u2019t forget to remove the brackets!). This admin user can log in after the JupyterHub is set up, and can configure it to their needs. Remember to add your username! curl -L https://tljh.jupyter.org/bootstrap.py | sudo -E python3 - --admin <admin-user-name> Press Enter to start the installation process. This will take 5-10 minutes, and will say Done! when the installation process is complete Copy the Public IP or campus IP of your server, and try accessing http:// from your browser. If everything went well, this should give you a JupyterHub login page. Login using the admin user name you used in step 3. You can choose any password that you wish. Use a strong password & note it down somewhere, since this will be the password for the admin user account from now on. For more information see the official \"the littlest jupyterhub\" docs .","title":"Installing the littlest jupyterhub"},{"location":"guides/Image-guides/ubuntu/ubuntu_18-04/","text":"Ubuntu 18.04 LTS The default username is ubuntu for the Ubuntu 18.04 LTS image. Use a key-pair applied to the instance in the creation, (Unsure what this is, see Quick-start - Your first instance ) to access the instance you can use the default IP Adress (You dont need a floating-IP adress) ssh ubuntu@10.92.0.xx -i yourPersonalKey.pem Installing GPU support You can pick the flavor gpu1.large to have access to a T4 GPU. To get up and running with the GPU you need to run sudo apt update sudo apt full-upgrade -y sudo apt install nvidia-headless-460 nvidia-utils-460 -y sudo reboot To get e.g. torch working with the anaconda distribution you can do: anacondaType = Anaconda3-2021.05-Linux-x86_64.sh wget -q https://repo.anaconda.com/archive/ $anacondaType chmod +x $anacondaType ./ $anacondaType -b -p sudo rm -f $anacondaType export PATH = \" $HOME /anaconda3/bin: $PATH \" conda init bash conda install pytorch torchvision torchaudio cudatoolkit = 11 .1 -c pytorch -c nvidia and verify /home/ubuntu/anaconda3/bin/ipython Python 3 .8.8 ( default, Apr 13 2021 , 19 :58:26 ) Type 'copyright' , 'credits' or 'license' for more information IPython 7 .22.0 -- An enhanced Interactive Python. Type '?' for help. In [ 1 ] : import torch In [ 2 ] : a = torch.zeros ( 10 ) .cuda () In [ 3 ] :","title":"Ubuntu 18.04"},{"location":"guides/Image-guides/ubuntu/ubuntu_18-04/#ubuntu-1804-lts","text":"The default username is ubuntu for the Ubuntu 18.04 LTS image. Use a key-pair applied to the instance in the creation, (Unsure what this is, see Quick-start - Your first instance ) to access the instance you can use the default IP Adress (You dont need a floating-IP adress) ssh ubuntu@10.92.0.xx -i yourPersonalKey.pem","title":"Ubuntu 18.04 LTS"},{"location":"guides/Image-guides/ubuntu/ubuntu_18-04/#installing-gpu-support","text":"You can pick the flavor gpu1.large to have access to a T4 GPU. To get up and running with the GPU you need to run sudo apt update sudo apt full-upgrade -y sudo apt install nvidia-headless-460 nvidia-utils-460 -y sudo reboot To get e.g. torch working with the anaconda distribution you can do: anacondaType = Anaconda3-2021.05-Linux-x86_64.sh wget -q https://repo.anaconda.com/archive/ $anacondaType chmod +x $anacondaType ./ $anacondaType -b -p sudo rm -f $anacondaType export PATH = \" $HOME /anaconda3/bin: $PATH \" conda init bash conda install pytorch torchvision torchaudio cudatoolkit = 11 .1 -c pytorch -c nvidia and verify /home/ubuntu/anaconda3/bin/ipython Python 3 .8.8 ( default, Apr 13 2021 , 19 :58:26 ) Type 'copyright' , 'credits' or 'license' for more information IPython 7 .22.0 -- An enhanced Interactive Python. Type '?' for help. In [ 1 ] : import torch In [ 2 ] : a = torch.zeros ( 10 ) .cuda () In [ 3 ] :","title":"Installing GPU support"},{"location":"guides/Image-guides/ubuntu/ubuntu_20-04/","text":"Ubuntu 20.04 LTS The default username is ubuntu for the 20.04 LTS image. Use a key-pair applied to the instance in the creation, (Unsure what this is, see Quick-start - Your first instance ) to access the instance you can use the default IP Adress (You dont need a floating-IP adress) ssh ubuntu@10.92.0.xx -i yourPersonalKey.pem rbd rm bio-pilot/a1024-gc1-e-01-fsck --cluster claaudia-c1 Installing GPU support You can pick the flavor gpu1.large to have access to a T4 GPU. To get up and running with the GPU you need to run sudo apt update sudo apt full-upgrade -y sudo apt install nvidia-headless-460 nvidia-utils-460 -y sudo reboot To get e.g. torch working with the anaconda distribution you can do: anacondaType = Anaconda3-2021.05-Linux-x86_64.sh wget -q https://repo.anaconda.com/archive/ $anacondaType chmod +x $anacondaType ./ $anacondaType -b -p sudo rm -f $anacondaType export PATH = \" $HOME /anaconda3/bin: $PATH \" conda init bash conda install pytorch torchvision torchaudio cudatoolkit = 11 .1 -c pytorch -c nvidia and verify /home/ubuntu/anaconda3/bin/ipython Python 3 .8.8 ( default, Apr 13 2021 , 19 :58:26 ) Type 'copyright' , 'credits' or 'license' for more information IPython 7 .22.0 -- An enhanced Interactive Python. Type '?' for help. In [ 1 ] : import torch In [ 2 ] : a = torch.zeros ( 10 ) .cuda () In [ 3 ] : Note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.","title":"Ubuntu 20.04"},{"location":"guides/Image-guides/ubuntu/ubuntu_20-04/#ubuntu-2004-lts","text":"The default username is ubuntu for the 20.04 LTS image. Use a key-pair applied to the instance in the creation, (Unsure what this is, see Quick-start - Your first instance ) to access the instance you can use the default IP Adress (You dont need a floating-IP adress) ssh ubuntu@10.92.0.xx -i yourPersonalKey.pem rbd rm bio-pilot/a1024-gc1-e-01-fsck --cluster claaudia-c1","title":"Ubuntu 20.04 LTS"},{"location":"guides/Image-guides/ubuntu/ubuntu_20-04/#installing-gpu-support","text":"You can pick the flavor gpu1.large to have access to a T4 GPU. To get up and running with the GPU you need to run sudo apt update sudo apt full-upgrade -y sudo apt install nvidia-headless-460 nvidia-utils-460 -y sudo reboot To get e.g. torch working with the anaconda distribution you can do: anacondaType = Anaconda3-2021.05-Linux-x86_64.sh wget -q https://repo.anaconda.com/archive/ $anacondaType chmod +x $anacondaType ./ $anacondaType -b -p sudo rm -f $anacondaType export PATH = \" $HOME /anaconda3/bin: $PATH \" conda init bash conda install pytorch torchvision torchaudio cudatoolkit = 11 .1 -c pytorch -c nvidia and verify /home/ubuntu/anaconda3/bin/ipython Python 3 .8.8 ( default, Apr 13 2021 , 19 :58:26 ) Type 'copyright' , 'credits' or 'license' for more information IPython 7 .22.0 -- An enhanced Interactive Python. Type '?' for help. In [ 1 ] : import torch In [ 2 ] : a = torch.zeros ( 10 ) .cuda () In [ 3 ] : Note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.","title":"Installing GPU support"},{"location":"guides/openstack_guides/","text":"Learn about more advanced OpenStack features E.g. deleting instances, releasing IPs or using the OpenStack CLI.","title":"Index"},{"location":"guides/openstack_guides/Access_to_instance/","text":"Access to instance Each instance has an internal fixed cloud IP address, but can also have a floating public IP address. An internal cloud IP addresses is used for communication between instances, and a floating public IP address is used for communication with networks outside the cloud, including the Internet. SSH rule Most images is reached by SSH, which require port 22 open. Navigate to network Click the sub menu Security Groups Click Manage Rules on the default Security group Add a rule Choose SSH from dropdown menu. Custom rule Some services require different ports open. To achieve this, the user must create a custom security rule and add it the instance Navigate to network click the sub menu Security Groups Create new Security group Enter name & description Add a rule with a custom port Key-pair Openstack authenticates per default Linux instances with a ssh key-pair. If you have to access the machine with SSH, the key-pair must be set. Navigate to Compute Click on the sub menu Key Pairs Add new Key Pair Fill out name Save the public key locally SSH access to instance You will have root-admin access to every instance you create and can therefore install additional software, tweak the instance or simply use it as is. Default username is ubuntu for all instances. There is no default password. Use SSH keys for safety, otherwise you muse create a user, and set a secure password your self. bash ssh ubuntu@130.226.98.xx -i yourPersonalKey.pem","title":"Custom security groups"},{"location":"guides/openstack_guides/Access_to_instance/#access-to-instance","text":"Each instance has an internal fixed cloud IP address, but can also have a floating public IP address. An internal cloud IP addresses is used for communication between instances, and a floating public IP address is used for communication with networks outside the cloud, including the Internet.","title":"Access to instance"},{"location":"guides/openstack_guides/Access_to_instance/#ssh-rule","text":"Most images is reached by SSH, which require port 22 open. Navigate to network Click the sub menu Security Groups Click Manage Rules on the default Security group Add a rule Choose SSH from dropdown menu.","title":"SSH rule"},{"location":"guides/openstack_guides/Access_to_instance/#custom-rule","text":"Some services require different ports open. To achieve this, the user must create a custom security rule and add it the instance Navigate to network click the sub menu Security Groups Create new Security group Enter name & description Add a rule with a custom port","title":"Custom rule"},{"location":"guides/openstack_guides/Access_to_instance/#key-pair","text":"Openstack authenticates per default Linux instances with a ssh key-pair. If you have to access the machine with SSH, the key-pair must be set. Navigate to Compute Click on the sub menu Key Pairs Add new Key Pair Fill out name Save the public key locally","title":"Key-pair"},{"location":"guides/openstack_guides/Access_to_instance/#ssh-access-to-instance","text":"You will have root-admin access to every instance you create and can therefore install additional software, tweak the instance or simply use it as is. Default username is ubuntu for all instances. There is no default password. Use SSH keys for safety, otherwise you muse create a user, and set a secure password your self. bash ssh ubuntu@130.226.98.xx -i yourPersonalKey.pem","title":"SSH access to instance"},{"location":"guides/openstack_guides/Move_To_strato/","text":"Copy data from old Strato to new Strato This guide is for you, if you have been a user on the \"old\" Strato compute cloud pilot and want to move to the new Strato, but have some data that should be moved as well. If you have data, that you cannot easily recreate you can move your data with SCP , SFTP , Rsync etc. to your new instance on strato. In the following examples, we will always execute the command from the new instance on Strato-new. To this end, we first need to copy the private key for the old Strato instance to the new instance. This can be done with e.g. SCP. Copy key with SCP First we will copy the private key (for the old instance) to the new instance. This can be done with e.g. SCP. This command is executed on your local computer: scp -i <private_key_new_strato> <private_key_old_strato> ubuntu@<To_Address>:<to_folder> Example: scp -i keynew.pem keyold.pem ubuntu@10.92.0.87:/home/ubuntu You can then SSH (with keynew.pem) to your new instance and start copying. In the above example, the IP address is one possible IP address in new Strato. You should replace it by the IP address of your own instance. Copy data with SCP You can then copy with SCP. One possible way to do this is (executed on your instance in new Strato): scp -i <private_key_old_strato> ubuntu@<from_address>:<from_folder> <to_folder> Example (single file): scp -i keyold.pem ubuntu@130.226.98.198:/home/ubuntu/data/data1.csv . or recursively (entire directory): scp -i keyold.pem -r ubuntu@130.226.98.198:/home/ubuntu/data/ . In the above examples, the IP address is one possible (\"floating\") IP address in old Strato. You should replace it by the IP address of your own instance. Copy data with Rsync For larger amounts of data we recommend rsync , since if something goes wrong in the process, we can start the sync process again to continue where it left off. A possible command to recursively transfer a directory is (executed on your instance in new Strato): rsync -Pavr -e \"ssh -i <private_key_old>\" ubuntu@<from_address>:<from_folder_path> <to_folder> Example: rsync -Pavr -e \"ssh -i stratocommon.pem\" ubuntu@130.226.98.119:/home/ubuntu/data /home/ubuntu/data","title":"Copy data from the old strato to new strato"},{"location":"guides/openstack_guides/Move_To_strato/#copy-data-from-old-strato-to-new-strato","text":"This guide is for you, if you have been a user on the \"old\" Strato compute cloud pilot and want to move to the new Strato, but have some data that should be moved as well. If you have data, that you cannot easily recreate you can move your data with SCP , SFTP , Rsync etc. to your new instance on strato. In the following examples, we will always execute the command from the new instance on Strato-new. To this end, we first need to copy the private key for the old Strato instance to the new instance. This can be done with e.g. SCP.","title":"Copy data from old Strato to new Strato"},{"location":"guides/openstack_guides/Move_To_strato/#copy-key-with-scp","text":"First we will copy the private key (for the old instance) to the new instance. This can be done with e.g. SCP. This command is executed on your local computer: scp -i <private_key_new_strato> <private_key_old_strato> ubuntu@<To_Address>:<to_folder> Example: scp -i keynew.pem keyold.pem ubuntu@10.92.0.87:/home/ubuntu You can then SSH (with keynew.pem) to your new instance and start copying. In the above example, the IP address is one possible IP address in new Strato. You should replace it by the IP address of your own instance.","title":"Copy key with SCP"},{"location":"guides/openstack_guides/Move_To_strato/#copy-data-with-scp","text":"You can then copy with SCP. One possible way to do this is (executed on your instance in new Strato): scp -i <private_key_old_strato> ubuntu@<from_address>:<from_folder> <to_folder> Example (single file): scp -i keyold.pem ubuntu@130.226.98.198:/home/ubuntu/data/data1.csv . or recursively (entire directory): scp -i keyold.pem -r ubuntu@130.226.98.198:/home/ubuntu/data/ . In the above examples, the IP address is one possible (\"floating\") IP address in old Strato. You should replace it by the IP address of your own instance.","title":"Copy data with SCP"},{"location":"guides/openstack_guides/Move_To_strato/#copy-data-with-rsync","text":"For larger amounts of data we recommend rsync , since if something goes wrong in the process, we can start the sync process again to continue where it left off. A possible command to recursively transfer a directory is (executed on your instance in new Strato): rsync -Pavr -e \"ssh -i <private_key_old>\" ubuntu@<from_address>:<from_folder_path> <to_folder> Example: rsync -Pavr -e \"ssh -i stratocommon.pem\" ubuntu@130.226.98.119:/home/ubuntu/data /home/ubuntu/data","title":"Copy data with Rsync"},{"location":"guides/openstack_guides/Pause_shutdown_delete_instances/","text":"Pause, shutdown and delete instances Instances in the Strato CLAAUDIA Compute cloud can have a range of States: Active: Instance is active, you can connect to it. Shelved: Shelving is useful if you have an instance that you are not using, but would like retain in your list of servers. For example, you can stop an instance at the end of a work week, and resume work again at the start of the next week. All associated data and resources are kept; however, anything still in memory is not retained. If a shelved instance is no longer needed, it can also be entirely removed. The shelved state will free allocated resources. Paused: In this state, the server state is preserved in RAM, but operations have been stopped and will resume when instructed. This state will keep allocated resources from being used by others. Suspended: Instance state has been stored on disk, including the contents of its RAM. This state will keep allocated resources from being used by others. Shutoff: This is like powering off a server. This state will keep allocated resources from being used by others. Resized: Allows you to select a new instance flavor, after which the instance will be taken down and then come back up with the new computational resources available to it. On Linux you can check with commands such as lscpu and lsmem or cat /proc/cpuinfo and cat /proc/meminfo . This state will keep allocated resources from being used by others. Shelve an instance If you know you are not going to use an instance for a while, for example the next couple of days or even longer, it is encouraged to release the resources to make them available to other users running instances on Strato. At the same time, you probably wish to be able to start the instance again at a later point if you need it. The way to release the resources occupied by your instance is to shelve the instance: Navigate to the project tab. Click the Compute sub-tab. Click on Instances . In the row of the instance you wish to shelve, press the dropdown menu in the right-most column, Actions . Select Shelve Instance from the dropdown. This will first shut down the instance nicely, save it to disk and subsequently release its resources. In order to use your instance again at a later point, repeat the above steps and this time select Unshelve Instance from the dropdown menu. Although other states such as Paused , Suspended , and Shutoff also make the instance unavailable, shelving an instance is the only approach that actually releases the resources and makes them available to other users and instances. Delete an instance To delete an instance using the Horizon web interface you must be logged in. For an instance to be deleted, it must first be shut down . Navigate to the launch instance menu using the horizon webinterface. Navigate to the project tab Click the Compute sub-tab Click on Instances Mark the checkbox of the instance you wish to delete. Press Delete Instances on the right side of the webpage. Press Delete Instances in the confirmation dialog. Deleting an instance will not delete the attached volume, unless specifically set to during creation.","title":"Stop, pause & delete instances"},{"location":"guides/openstack_guides/Pause_shutdown_delete_instances/#pause-shutdown-and-delete-instances","text":"Instances in the Strato CLAAUDIA Compute cloud can have a range of States: Active: Instance is active, you can connect to it. Shelved: Shelving is useful if you have an instance that you are not using, but would like retain in your list of servers. For example, you can stop an instance at the end of a work week, and resume work again at the start of the next week. All associated data and resources are kept; however, anything still in memory is not retained. If a shelved instance is no longer needed, it can also be entirely removed. The shelved state will free allocated resources. Paused: In this state, the server state is preserved in RAM, but operations have been stopped and will resume when instructed. This state will keep allocated resources from being used by others. Suspended: Instance state has been stored on disk, including the contents of its RAM. This state will keep allocated resources from being used by others. Shutoff: This is like powering off a server. This state will keep allocated resources from being used by others. Resized: Allows you to select a new instance flavor, after which the instance will be taken down and then come back up with the new computational resources available to it. On Linux you can check with commands such as lscpu and lsmem or cat /proc/cpuinfo and cat /proc/meminfo . This state will keep allocated resources from being used by others.","title":"Pause, shutdown and delete instances"},{"location":"guides/openstack_guides/Pause_shutdown_delete_instances/#shelve-an-instance","text":"If you know you are not going to use an instance for a while, for example the next couple of days or even longer, it is encouraged to release the resources to make them available to other users running instances on Strato. At the same time, you probably wish to be able to start the instance again at a later point if you need it. The way to release the resources occupied by your instance is to shelve the instance: Navigate to the project tab. Click the Compute sub-tab. Click on Instances . In the row of the instance you wish to shelve, press the dropdown menu in the right-most column, Actions . Select Shelve Instance from the dropdown. This will first shut down the instance nicely, save it to disk and subsequently release its resources. In order to use your instance again at a later point, repeat the above steps and this time select Unshelve Instance from the dropdown menu. Although other states such as Paused , Suspended , and Shutoff also make the instance unavailable, shelving an instance is the only approach that actually releases the resources and makes them available to other users and instances.","title":"Shelve an instance"},{"location":"guides/openstack_guides/Pause_shutdown_delete_instances/#delete-an-instance","text":"To delete an instance using the Horizon web interface you must be logged in. For an instance to be deleted, it must first be shut down . Navigate to the launch instance menu using the horizon webinterface. Navigate to the project tab Click the Compute sub-tab Click on Instances Mark the checkbox of the instance you wish to delete. Press Delete Instances on the right side of the webpage. Press Delete Instances in the confirmation dialog. Deleting an instance will not delete the attached volume, unless specifically set to during creation.","title":"Delete an instance"},{"location":"guides/openstack_guides/attach_volume/","text":"Attaching volumes for additional storage If you need additional storage, you can attach a volume to a running instance, make a filesystem and then mount the new filesystem on the attached volume. Be aware that each user has 10 TB of storage by default. Guide: 1. Go to Volumes/Volumes and then click \"+ Create Volume\". Give it a name to make it easier to locate and a size. Make sure to leave \"Volume Source\" and \"Type\" at their default values. 2. Find the instance you wish to attach the newly created volume to under Compute/Instances and under \"Actions\" for the relevant instance (must be a running instance) select \"Attach Volume\". Select the volume you have just created. 3. You should see a popup message with the name of new device, e.g. \"/dev/vdb\", \"/dev/vdc\" etc. You can also click on the instance name to to get info on e.g. the attached volumes and their naming. 4. SSH to the instance and create a new filesystem for the newly attached device/volume with e.g. ( this overwrites any existing data . Only do this the first time you attach this volume; not when re-attaching later after a reboot or similar.) $ sudo mkfs.ext4 /dev/vdb 5. Make a mount point in e.g. your home dir: mkdir ~/vol1 6. Mount $ sudo mount /dev/vdb ~/vol1 7. Verify that the volume has been mounted as expected: $ df -h Filesystem Size Used Avail Use% Mounted on udev 7 .9G 0 7 .9G 0 % /dev ................................................ /dev/vdb 976M 2 .6M 907M 1 % /home/ubuntu/vol1 Mounting the volume permanently You may want to configure your above mount permanently, so it automatically gets mounted if you reboot your instance, for example. In order to do this, follow steps 1-5 above. Then proceed as follows: Edit the file system mounting table $ sudo nano /etc/fstab Do not alter or remove any of the existing contents in this file. This can render your instance unusable. Add the following on a new line at the bottom of this file: /dev/vdb /home/ubuntu/vol1 ext4 defaults 0 0 The long whitespaces above must be tab characters This assumes that your volume is attached as \"/dev/vdb\". If it is attached as another device (see step 3 above), type this device name instead. This assumes that you have created your mount point at \"~/vol1\". If you have created it somewhere else (see step 5 above), type the full path to it instead of \"/home/ubuntu/vol1\". Press CTRL-X in the nano text editor, type \"y\" for yes and hit ENTER to exit the editor and save the file. Now mount your newly configured volume with the following command (causes mount to mount all file systems mentioned in \"etc/fstab\"): $ sudo mount -a Verify that the volume has been mounted as expected: $ df -h Filesystem Size Used Avail Use% Mounted on udev 7 .9G 0 7 .9G 0 % /dev ................................................ /dev/vdb 976M 2 .6M 907M 1 % /home/ubuntu/vol1","title":"Attaching a volume for additional storage"},{"location":"guides/openstack_guides/attach_volume/#attaching-volumes-for-additional-storage","text":"If you need additional storage, you can attach a volume to a running instance, make a filesystem and then mount the new filesystem on the attached volume. Be aware that each user has 10 TB of storage by default. Guide: 1. Go to Volumes/Volumes and then click \"+ Create Volume\". Give it a name to make it easier to locate and a size. Make sure to leave \"Volume Source\" and \"Type\" at their default values. 2. Find the instance you wish to attach the newly created volume to under Compute/Instances and under \"Actions\" for the relevant instance (must be a running instance) select \"Attach Volume\". Select the volume you have just created. 3. You should see a popup message with the name of new device, e.g. \"/dev/vdb\", \"/dev/vdc\" etc. You can also click on the instance name to to get info on e.g. the attached volumes and their naming. 4. SSH to the instance and create a new filesystem for the newly attached device/volume with e.g. ( this overwrites any existing data . Only do this the first time you attach this volume; not when re-attaching later after a reboot or similar.) $ sudo mkfs.ext4 /dev/vdb 5. Make a mount point in e.g. your home dir: mkdir ~/vol1 6. Mount $ sudo mount /dev/vdb ~/vol1 7. Verify that the volume has been mounted as expected: $ df -h Filesystem Size Used Avail Use% Mounted on udev 7 .9G 0 7 .9G 0 % /dev ................................................ /dev/vdb 976M 2 .6M 907M 1 % /home/ubuntu/vol1","title":"Attaching volumes for additional storage"},{"location":"guides/openstack_guides/attach_volume/#mounting-the-volume-permanently","text":"You may want to configure your above mount permanently, so it automatically gets mounted if you reboot your instance, for example. In order to do this, follow steps 1-5 above. Then proceed as follows: Edit the file system mounting table $ sudo nano /etc/fstab Do not alter or remove any of the existing contents in this file. This can render your instance unusable. Add the following on a new line at the bottom of this file: /dev/vdb /home/ubuntu/vol1 ext4 defaults 0 0 The long whitespaces above must be tab characters This assumes that your volume is attached as \"/dev/vdb\". If it is attached as another device (see step 3 above), type this device name instead. This assumes that you have created your mount point at \"~/vol1\". If you have created it somewhere else (see step 5 above), type the full path to it instead of \"/home/ubuntu/vol1\". Press CTRL-X in the nano text editor, type \"y\" for yes and hit ENTER to exit the editor and save the file. Now mount your newly configured volume with the following command (causes mount to mount all file systems mentioned in \"etc/fstab\"): $ sudo mount -a Verify that the volume has been mounted as expected: $ df -h Filesystem Size Used Avail Use% Mounted on udev 7 .9G 0 7 .9G 0 % /dev ................................................ /dev/vdb 976M 2 .6M 907M 1 % /home/ubuntu/vol1","title":"Mounting the volume permanently"},{"location":"guides/openstack_guides/diffrent_volume_size/","text":"Custom volume size When you create a new instance, it will inherit the volume size from the flavour (1TB). To create a custom volume the user must first create a volume and then launch this volume as an instance. Navigate to the Volume tab. Click the Create Volume button. Set Volume Name . Set Volume Source from image . Set Set custom size . Click launch instance as volume. Set name for instance Select Boot source Volume . Select flavour and launch instance","title":"Custom volume size"},{"location":"guides/openstack_guides/diffrent_volume_size/#custom-volume-size","text":"When you create a new instance, it will inherit the volume size from the flavour (1TB). To create a custom volume the user must first create a volume and then launch this volume as an instance. Navigate to the Volume tab. Click the Create Volume button. Set Volume Name . Set Volume Source from image . Set Set custom size . Click launch instance as volume. Set name for instance Select Boot source Volume . Select flavour and launch instance","title":"Custom volume size"},{"location":"guides/openstack_guides/openstack_CLI/","text":"Command line interface (CLI) access For advanced users it is possible to manage the cloud instances from the command line interface. THE GUIDE IS TESTED ON UBUNTU 18.04 For CLI access, the OpenStackClient (OSC) must be installed. USE PIP The package in apt does not work for SAML2 Authentication. Linux $ sudo apt install python3-openstackclient # or $ pip install python-openstackclient # If pip is not installed run $ sudo apt install python-pip Mac curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py python get-pip.py pip install python-openstackclient Get token From a internet browser, login to this openstack wayf auth and inspect the Response Headers and find the X-Subject-Token . How to find the Response Headers varies from browser to browser. To find the Response Headers checkout this guide https://www.dev2qa.com/how-to-view-http-headers-cookies-in-google-chrome-firefox-internet-explorer/ which covers the most common browsers. After you have found the X-Subject-Token , login to strato-new as normal. In the upper right corner, find and click your AAU ID (XXZZXX@aau.dk), and then \"OpenStack RC File\". Open or save the file. Start a terminal, and export the following variables (you need to locate a few values from the \"OpenStack RC File\"): export OS_AUTH_TYPE = token export OS_IDENTITY_API_VERSION = 3 export OS_AUTH_URL = https://strato-new.claaudia.aau.dk:5000 export OS_PROJECT_ID = <project ID as given in the OpenStack RC File> export OS_PROJECT_NAME = <your name as given in the Openstack RC File> export OS_TOKEN = <value of **X-Subject-Token**> If successful, you can now test your setup like openstack server list $ openstack server list +--------------------------------------+--------+--------+------------------------------+--------------------------+-----------+ | ID | Name | Status | Networks | Image | Flavor | +--------------------------------------+--------+--------+------------------------------+--------------------------+-----------+ | cdaa335b-6b7f-44e0-9903-7d6b0a9dd06e | matlab | ACTIVE | Campus Network 01 = 10 .92.0.55 | N/A ( booted from volume ) | gp.medium | +--------------------------------------+--------+--------+------------------------------+--------------------------+-----------+ To get more information about your instance you can do e.g. $ openstack server show cdaa335b-6b7f-44e0-9903-7d6b0a9dd06e +-----------------------------+------------------------------------------------------------------+ | Field | Value | +-----------------------------+------------------------------------------------------------------+ | OS-DCF:diskConfig | MANUAL | | OS-EXT-AZ:availability_zone | AAU | | OS-EXT-STS:power_state | Running | | OS-EXT-STS:task_state | None | | OS-EXT-STS:vm_state | active | | OS-SRV-USG:launched_at | 2022 -01-17T10:17:53.000000 | | OS-SRV-USG:terminated_at | None | | accessIPv4 | | | accessIPv6 | | | addresses | Campus Network 01 = 10 .92.0.55 | | config_drive | | | created | 2022 -01-13T12:53:35Z | | flavor | gp.medium ( 0313b9b4-fbc3-44d9-81d1-9e5e925d1a97 ) | | hostId | e62666d97723e316fb8cc43a508156253a5e8684ae5c97525f36a94c | | id | cdaa335b-6b7f-44e0-9903-7d6b0a9dd06e | | image | N/A ( booted from volume ) | | key_name | stratonew | | name | matlab | | progress | 0 | | project_id | 19d0e041fb364580abc26539180dd0e1 | | properties | | | security_groups | name = 'default' | | status | ACTIVE | | updated | 2022 -01-17T10:19:56Z | | user_id | a42a435578323b3d7edd853e98fc643cbb4dd82ef8d5160c30be720f218b121f | | volumes_attached | id = '88a77439-439a-4647-a069-f5ec7035239d' | +-----------------------------+------------------------------------------------------------------+ Information that can be obtained from the Horizon web interface can also be accessed via the CLI, like quota: $ openstack quota show --max-width 79 +-----------------------+-----------------------------------------------------+ | Field | Value | +-----------------------+-----------------------------------------------------+ | backup-gigabytes | 1000 | | backups | 10 | | cores | 64 | | fixed-ips | -1 | | floating-ips | 50 | | gigabytes | 10000 | | gigabytes_RBD | -1 | | gigabytes___DEFAULT__ | -1 | | groups | 10 | | injected-file-size | 10240 | | injected-files | 5 | | injected-path-size | 255 | | instances | 5 | | key-pairs | 100 | | location | Munch ({ 'cloud' : '' , 'region_name' : '' , 'zone' : | | | None, 'project' : Munch ({ 'id' : | | | '19d0e041fb364580abc26539180dd0e1' , 'name' : | | | 'XU43DZ@aau.dk' , 'domain_id' : None, 'domain_name' : | | | None })}) | | networks | 100 | | per-volume-gigabytes | -1 | | ports | 500 | | project | 19d0e041fb364580abc26539180dd0e1 | | project_name | XU43DZ@aau.dk | | properties | 128 | | ram | 512000 | | rbac_policies | 10 | | routers | 10 | | secgroup-rules | 100 | | secgroups | 10 | | server-group-members | 10 | | server-groups | 10 | | snapshots | 5 | | snapshots_RBD | -1 | | snapshots___DEFAULT__ | -1 | | subnet_pools | -1 | | subnets | 100 | | volumes | 10 | | volumes_RBD | -1 | | volumes___DEFAULT__ | -1 | +-----------------------+-----------------------------------------------------+ Flavors: $ openstack flavor list +--------------------------------------+--------------+--------+------+-----------+-------+-----------+ | ID | Name | RAM | Disk | Ephemeral | VCPUs | Is Public | +--------------------------------------+--------------+--------+------+-----------+-------+-----------+ | 0238fdc1-2525-4669-be22-a545341c8301 | cpu.small | 16384 | 100 | 0 | 8 | True | | 0313b9b4-fbc3-44d9-81d1-9e5e925d1a97 | gp.medium | 32768 | 100 | 0 | 8 | True | | 076618de-18c3-4539-b77c-fa4e09fd0755 | cpu.xlarge | 131072 | 100 | 0 | 64 | True | | 386615e0-efa8-488f-a7ec-4e643eaa1df1 | cpu.large | 65536 | 100 | 0 | 32 | True | | 5ae3ddeb-6a25-409e-ac18-9a27dde53dcf | m1.xlarge | 16384 | 160 | 0 | 8 | True | | 755ffd3f-1329-48aa-a7cf-6974981a8dab | gp.small | 16384 | 100 | 0 | 4 | True | | 7cb367d4-9715-411c-867f-a1b90d0e98ae | gp.large | 65536 | 100 | 0 | 16 | True | | 928a50d7-d05b-4b7d-9396-71f7afb94e46 | gpu.t4-large | 41000 | 100 | 0 | 10 | True | | a2246ad5-7f9b-414b-9f92-6bda0021508d | mem.xlarge | 262144 | 100 | 0 | 32 | True | | abb9477b-955c-45fa-bfaf-b53ebc8b2cb7 | mem.small | 32768 | 100 | 0 | 4 | True | | cc48e798-6bf2-4df9-8705-5f3a3b558f1d | mem.medium | 65536 | 100 | 0 | 8 | True | | dd498df0-a489-48da-a5fd-44959b1ae34c | mem.large | 131072 | 100 | 0 | 16 | True | | e986e579-45e1-4542-a99e-5fc1518adc8a | cpu.medium | 32768 | 100 | 0 | 3 | True | +--------------------------------------+--------------+--------+------+-----------+-------+-----------+ Images: $ openstack image list +--------------------------------------+------------------------------+--------+ | ID | Name | Status | +--------------------------------------+------------------------------+--------+ | 4321a635-97c6-4c82-a000-71b381f4e0ce | CentOS 8 | active | | 6a77c780-37ea-4b73-afe8-c730e19524cb | FreeBSD 12 .1 | active | | a561c93f-adb4-46e8-8d31-bb34c3430e78 | Ubuntu 18 .04 ( Bionic Beaver ) | active | | dd18a9d1-6d53-423f-9511-bf075c4c9ce7 | Ubuntu 20 .04 ( Focal Fossa ) | active | | 9cb0e0e5-715d-4cdb-bca2-d239a451e3b6 | cirros-0.5.1-x86_64 | active | +--------------------------------------+------------------------------+--------+ For more information on how to use the cli check out the OpenStack CLI documentation or the Python OpenStack Client","title":"CLI"},{"location":"guides/openstack_guides/openstack_CLI/#command-line-interface-cli-access","text":"For advanced users it is possible to manage the cloud instances from the command line interface. THE GUIDE IS TESTED ON UBUNTU 18.04 For CLI access, the OpenStackClient (OSC) must be installed. USE PIP The package in apt does not work for SAML2 Authentication.","title":"Command line interface (CLI) access"},{"location":"guides/openstack_guides/openstack_CLI/#linux","text":"$ sudo apt install python3-openstackclient # or $ pip install python-openstackclient # If pip is not installed run $ sudo apt install python-pip","title":"Linux"},{"location":"guides/openstack_guides/openstack_CLI/#mac","text":"curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py python get-pip.py pip install python-openstackclient","title":"Mac"},{"location":"guides/openstack_guides/openstack_CLI/#get-token","text":"From a internet browser, login to this openstack wayf auth and inspect the Response Headers and find the X-Subject-Token . How to find the Response Headers varies from browser to browser. To find the Response Headers checkout this guide https://www.dev2qa.com/how-to-view-http-headers-cookies-in-google-chrome-firefox-internet-explorer/ which covers the most common browsers. After you have found the X-Subject-Token , login to strato-new as normal. In the upper right corner, find and click your AAU ID (XXZZXX@aau.dk), and then \"OpenStack RC File\". Open or save the file. Start a terminal, and export the following variables (you need to locate a few values from the \"OpenStack RC File\"): export OS_AUTH_TYPE = token export OS_IDENTITY_API_VERSION = 3 export OS_AUTH_URL = https://strato-new.claaudia.aau.dk:5000 export OS_PROJECT_ID = <project ID as given in the OpenStack RC File> export OS_PROJECT_NAME = <your name as given in the Openstack RC File> export OS_TOKEN = <value of **X-Subject-Token**> If successful, you can now test your setup like openstack server list $ openstack server list +--------------------------------------+--------+--------+------------------------------+--------------------------+-----------+ | ID | Name | Status | Networks | Image | Flavor | +--------------------------------------+--------+--------+------------------------------+--------------------------+-----------+ | cdaa335b-6b7f-44e0-9903-7d6b0a9dd06e | matlab | ACTIVE | Campus Network 01 = 10 .92.0.55 | N/A ( booted from volume ) | gp.medium | +--------------------------------------+--------+--------+------------------------------+--------------------------+-----------+ To get more information about your instance you can do e.g. $ openstack server show cdaa335b-6b7f-44e0-9903-7d6b0a9dd06e +-----------------------------+------------------------------------------------------------------+ | Field | Value | +-----------------------------+------------------------------------------------------------------+ | OS-DCF:diskConfig | MANUAL | | OS-EXT-AZ:availability_zone | AAU | | OS-EXT-STS:power_state | Running | | OS-EXT-STS:task_state | None | | OS-EXT-STS:vm_state | active | | OS-SRV-USG:launched_at | 2022 -01-17T10:17:53.000000 | | OS-SRV-USG:terminated_at | None | | accessIPv4 | | | accessIPv6 | | | addresses | Campus Network 01 = 10 .92.0.55 | | config_drive | | | created | 2022 -01-13T12:53:35Z | | flavor | gp.medium ( 0313b9b4-fbc3-44d9-81d1-9e5e925d1a97 ) | | hostId | e62666d97723e316fb8cc43a508156253a5e8684ae5c97525f36a94c | | id | cdaa335b-6b7f-44e0-9903-7d6b0a9dd06e | | image | N/A ( booted from volume ) | | key_name | stratonew | | name | matlab | | progress | 0 | | project_id | 19d0e041fb364580abc26539180dd0e1 | | properties | | | security_groups | name = 'default' | | status | ACTIVE | | updated | 2022 -01-17T10:19:56Z | | user_id | a42a435578323b3d7edd853e98fc643cbb4dd82ef8d5160c30be720f218b121f | | volumes_attached | id = '88a77439-439a-4647-a069-f5ec7035239d' | +-----------------------------+------------------------------------------------------------------+ Information that can be obtained from the Horizon web interface can also be accessed via the CLI, like quota: $ openstack quota show --max-width 79 +-----------------------+-----------------------------------------------------+ | Field | Value | +-----------------------+-----------------------------------------------------+ | backup-gigabytes | 1000 | | backups | 10 | | cores | 64 | | fixed-ips | -1 | | floating-ips | 50 | | gigabytes | 10000 | | gigabytes_RBD | -1 | | gigabytes___DEFAULT__ | -1 | | groups | 10 | | injected-file-size | 10240 | | injected-files | 5 | | injected-path-size | 255 | | instances | 5 | | key-pairs | 100 | | location | Munch ({ 'cloud' : '' , 'region_name' : '' , 'zone' : | | | None, 'project' : Munch ({ 'id' : | | | '19d0e041fb364580abc26539180dd0e1' , 'name' : | | | 'XU43DZ@aau.dk' , 'domain_id' : None, 'domain_name' : | | | None })}) | | networks | 100 | | per-volume-gigabytes | -1 | | ports | 500 | | project | 19d0e041fb364580abc26539180dd0e1 | | project_name | XU43DZ@aau.dk | | properties | 128 | | ram | 512000 | | rbac_policies | 10 | | routers | 10 | | secgroup-rules | 100 | | secgroups | 10 | | server-group-members | 10 | | server-groups | 10 | | snapshots | 5 | | snapshots_RBD | -1 | | snapshots___DEFAULT__ | -1 | | subnet_pools | -1 | | subnets | 100 | | volumes | 10 | | volumes_RBD | -1 | | volumes___DEFAULT__ | -1 | +-----------------------+-----------------------------------------------------+ Flavors: $ openstack flavor list +--------------------------------------+--------------+--------+------+-----------+-------+-----------+ | ID | Name | RAM | Disk | Ephemeral | VCPUs | Is Public | +--------------------------------------+--------------+--------+------+-----------+-------+-----------+ | 0238fdc1-2525-4669-be22-a545341c8301 | cpu.small | 16384 | 100 | 0 | 8 | True | | 0313b9b4-fbc3-44d9-81d1-9e5e925d1a97 | gp.medium | 32768 | 100 | 0 | 8 | True | | 076618de-18c3-4539-b77c-fa4e09fd0755 | cpu.xlarge | 131072 | 100 | 0 | 64 | True | | 386615e0-efa8-488f-a7ec-4e643eaa1df1 | cpu.large | 65536 | 100 | 0 | 32 | True | | 5ae3ddeb-6a25-409e-ac18-9a27dde53dcf | m1.xlarge | 16384 | 160 | 0 | 8 | True | | 755ffd3f-1329-48aa-a7cf-6974981a8dab | gp.small | 16384 | 100 | 0 | 4 | True | | 7cb367d4-9715-411c-867f-a1b90d0e98ae | gp.large | 65536 | 100 | 0 | 16 | True | | 928a50d7-d05b-4b7d-9396-71f7afb94e46 | gpu.t4-large | 41000 | 100 | 0 | 10 | True | | a2246ad5-7f9b-414b-9f92-6bda0021508d | mem.xlarge | 262144 | 100 | 0 | 32 | True | | abb9477b-955c-45fa-bfaf-b53ebc8b2cb7 | mem.small | 32768 | 100 | 0 | 4 | True | | cc48e798-6bf2-4df9-8705-5f3a3b558f1d | mem.medium | 65536 | 100 | 0 | 8 | True | | dd498df0-a489-48da-a5fd-44959b1ae34c | mem.large | 131072 | 100 | 0 | 16 | True | | e986e579-45e1-4542-a99e-5fc1518adc8a | cpu.medium | 32768 | 100 | 0 | 3 | True | +--------------------------------------+--------------+--------+------+-----------+-------+-----------+ Images: $ openstack image list +--------------------------------------+------------------------------+--------+ | ID | Name | Status | +--------------------------------------+------------------------------+--------+ | 4321a635-97c6-4c82-a000-71b381f4e0ce | CentOS 8 | active | | 6a77c780-37ea-4b73-afe8-c730e19524cb | FreeBSD 12 .1 | active | | a561c93f-adb4-46e8-8d31-bb34c3430e78 | Ubuntu 18 .04 ( Bionic Beaver ) | active | | dd18a9d1-6d53-423f-9511-bf075c4c9ce7 | Ubuntu 20 .04 ( Focal Fossa ) | active | | 9cb0e0e5-715d-4cdb-bca2-d239a451e3b6 | cirros-0.5.1-x86_64 | active | +--------------------------------------+------------------------------+--------+ For more information on how to use the cli check out the OpenStack CLI documentation or the Python OpenStack Client","title":"Get token"},{"location":"guides/openstack_guides/putty/","text":"SSH for Windows using putty If you're using an older version of Windows, you might not have access to the OpenSSH client. Instead, people often use the tool PuTTY . Convert key With the native OpenSSH client you can use this private key(pem-file) directly. For Putty you have to convert your key first, by completing the following steps: Start PuTTYgen (e.g., from the Start menu, click All Programs > PuTTY > PuTTYgen). Click Load Browse to the location of the private key file that you want to convert (e.g., MyPersonalKey.pem). Note: By default, PuTTYgen displays only files with extension .ppk; you'll need to change that to display files of all types in order to see your .pem key file. The private key file must end with a newline character or PuTTYgen cannot load it correctly. Select your .pem key file and click Open. If everything went well PuTTYgen displays the following message: When you click OK, PuTTYgen displays a dialog box with information about the key you loaded, such as the public key and the fingerprint. Optional: Enter and confirm a key passphrase (If you use a passphrase you will have to enter this passphrase whenever you authenticate with your key.) Click Save private key to save the key in PuTTY's format. Save your yourPersonalKey.ppk file somewhere secure. SSH to instance First, we need to convert yourPersonalKey.pem to the format used with Putty before we can use PuTTY. The steps are: Open PuTTY. Go in the tree on the left to Connection > SSH > Auth Click on the \u2018Browse...\u2019 button under Private key file for authentication: Select the PPK-file (your private key) you just saved. Go in the tree on the left to \u2018Session\u2019 Enter in the \u2018Host Name (or IP address)\u2019 field the username and floating IP address of the instance: Optional: Enter a name for the session in the \u2018Saved Sessions\u2019 field and click save. This saves all the settings, including the private key for this session. Click Open to connect to the instance. When you connect for the first time you\u2019ll be asked if you trust this computer. Normally you can click Yes 10.If you\u2019re connecting to an instance with a floating IP that you used before you\u2019ll get this warning message. If that\u2019s the case, it\u2019s safe to click Yes as well. If everything works alright you\u2019re now logged in. These steps forms a framework for other tools as well. If you like e.g. FileZilla , locate how to use/add the pemision file \"yourPersonalKey.pem\", and connect with the SSH protocol. X11 forwaring If you want to see GUIs using X11 forwarding, you can follow the guider here","title":"SSH for Windows using putty"},{"location":"guides/openstack_guides/putty/#ssh-for-windows-using-putty","text":"If you're using an older version of Windows, you might not have access to the OpenSSH client. Instead, people often use the tool PuTTY .","title":"SSH for Windows using putty"},{"location":"guides/openstack_guides/putty/#convert-key","text":"With the native OpenSSH client you can use this private key(pem-file) directly. For Putty you have to convert your key first, by completing the following steps: Start PuTTYgen (e.g., from the Start menu, click All Programs > PuTTY > PuTTYgen). Click Load Browse to the location of the private key file that you want to convert (e.g., MyPersonalKey.pem). Note: By default, PuTTYgen displays only files with extension .ppk; you'll need to change that to display files of all types in order to see your .pem key file. The private key file must end with a newline character or PuTTYgen cannot load it correctly. Select your .pem key file and click Open. If everything went well PuTTYgen displays the following message: When you click OK, PuTTYgen displays a dialog box with information about the key you loaded, such as the public key and the fingerprint. Optional: Enter and confirm a key passphrase (If you use a passphrase you will have to enter this passphrase whenever you authenticate with your key.) Click Save private key to save the key in PuTTY's format. Save your yourPersonalKey.ppk file somewhere secure.","title":"Convert key"},{"location":"guides/openstack_guides/putty/#ssh-to-instance","text":"First, we need to convert yourPersonalKey.pem to the format used with Putty before we can use PuTTY. The steps are: Open PuTTY. Go in the tree on the left to Connection > SSH > Auth Click on the \u2018Browse...\u2019 button under Private key file for authentication: Select the PPK-file (your private key) you just saved. Go in the tree on the left to \u2018Session\u2019 Enter in the \u2018Host Name (or IP address)\u2019 field the username and floating IP address of the instance: Optional: Enter a name for the session in the \u2018Saved Sessions\u2019 field and click save. This saves all the settings, including the private key for this session. Click Open to connect to the instance. When you connect for the first time you\u2019ll be asked if you trust this computer. Normally you can click Yes 10.If you\u2019re connecting to an instance with a floating IP that you used before you\u2019ll get this warning message. If that\u2019s the case, it\u2019s safe to click Yes as well. If everything works alright you\u2019re now logged in. These steps forms a framework for other tools as well. If you like e.g. FileZilla , locate how to use/add the pemision file \"yourPersonalKey.pem\", and connect with the SSH protocol.","title":"SSH to instance"},{"location":"guides/openstack_guides/putty/#x11-forwaring","text":"If you want to see GUIs using X11 forwarding, you can follow the guider here","title":"X11 forwaring"},{"location":"guides/openstack_guides/remote_desktop_xfce/","text":"Remote desktop using X2Go and Xfce You might be interested in obtaining a GUI interface of you instances for directly visualizing results or using the GUI of your programs. In this guide we will show you how to do this using X2Go for remote desktop and the Xfce desktop environment . The main reason for using X2Go is that it allows for data traffic using SSH such we can use the existing infrastructure - the already open port on 22 for SSH and authentication using RSA keys. Login to the instance using SSH and add x2go to the list of repositories $ sudo add-apt-repository -y ppa:x2go/stable and install necessary software (you can select either display manager - lightdm or gdm3). $ sudo apt-get --assume-yes install xfce4 software-properties-common x2goserver x2goserver-xsession Install a X2Go client on your computer and open the client. Create a new session with Host: Login: ubuntu RSA key for SSH connection: Session Type: XFCE Example: You should then be able to login:","title":"Remote desktop using X2Go and Xfce"},{"location":"guides/openstack_guides/remote_desktop_xfce/#remote-desktop-using-x2go-and-xfce","text":"You might be interested in obtaining a GUI interface of you instances for directly visualizing results or using the GUI of your programs. In this guide we will show you how to do this using X2Go for remote desktop and the Xfce desktop environment . The main reason for using X2Go is that it allows for data traffic using SSH such we can use the existing infrastructure - the already open port on 22 for SSH and authentication using RSA keys. Login to the instance using SSH and add x2go to the list of repositories $ sudo add-apt-repository -y ppa:x2go/stable and install necessary software (you can select either display manager - lightdm or gdm3). $ sudo apt-get --assume-yes install xfce4 software-properties-common x2goserver x2goserver-xsession Install a X2Go client on your computer and open the client. Create a new session with Host: Login: ubuntu RSA key for SSH connection: Session Type: XFCE Example: You should then be able to login:","title":"Remote desktop using X2Go and Xfce"},{"location":"guides/openstack_guides/resize/","text":"Resizing an instance Maybe you have created an instance and after a bit of time realized that you need a larger instance, or that you can resize to a smaller. In this case it is possible to resize if there are sufficient resources in the cloud to do so. To resize, do the following: Go to your instance - Compute->Instances. Rightmost under columns \"Actions\" roll-down and select \"Resize Instance\". Select the new instance size. Notice that CPU and RAM goes together so an increased amount of RAM would also implies more CPU and vice versa. Click \"Resize\". If it is possible to resize (enough resources if you ask for a larger flavor), the system should prepare the resize. After a bit of time then you will need to finally hit \"Confirm\" again in the rightmost \"Action\" column for your instance. You have now resized your image.","title":"Resizing an instance"},{"location":"guides/openstack_guides/resize/#resizing-an-instance","text":"Maybe you have created an instance and after a bit of time realized that you need a larger instance, or that you can resize to a smaller. In this case it is possible to resize if there are sufficient resources in the cloud to do so. To resize, do the following: Go to your instance - Compute->Instances. Rightmost under columns \"Actions\" roll-down and select \"Resize Instance\". Select the new instance size. Notice that CPU and RAM goes together so an increased amount of RAM would also implies more CPU and vice versa. Click \"Resize\". If it is possible to resize (enough resources if you ask for a larger flavor), the system should prepare the resize. After a bit of time then you will need to finally hit \"Confirm\" again in the rightmost \"Action\" column for your instance. You have now resized your image.","title":"Resizing an instance"},{"location":"guides/openstack_guides/running_simulations/","text":"Running long simulations You might want to start long simulations, but this requires a bit of extra work. If you start the simulation in the login session, you need to keep the SSH connection alive and not e.g. close down your computer, close terminal etc. to avoid killing/stopping the simulations process. To avoid this problem you have to start the simulations through a mechanism that allows you to \"detach\" from the running process. There are multiple options for running long simulations in a detached session, the most common being screen , tmux and byobu . Here well show how to get started using screen Start a new screen: $ screen and press [Enter] to acknowledge the terms. You should now see a fresh session. In this session you can start your simulations. When the simulations are running, hit [Ctrl+a d] to \"detach\". You should now be in your login session again. Now try $ screen -ls There is a screen on: 1463 .pts-0.screen-test ( 09 /09/21 09 :48:48 ) ( Detached ) 1 Socket in /run/screen/S-ubuntu. and you should see a single screen that is detached. You can start multiple screens using screen again. To re-attach to a detached session, you can do: $ screen -r to reattach if you only have one screen, or: $ screen -r 146 or the few first characters of the screen name to re-attach a particular screen session. When attached, you can then inspect standard output for simulation progress. You can read more about screen on the internet, e.g. a guide or a cheatsheet As mentioned, you can also use more advanced session managers such as tmux and byobu . Please consult additional guides for this.","title":"Running long simulations"},{"location":"guides/openstack_guides/running_simulations/#running-long-simulations","text":"You might want to start long simulations, but this requires a bit of extra work. If you start the simulation in the login session, you need to keep the SSH connection alive and not e.g. close down your computer, close terminal etc. to avoid killing/stopping the simulations process. To avoid this problem you have to start the simulations through a mechanism that allows you to \"detach\" from the running process. There are multiple options for running long simulations in a detached session, the most common being screen , tmux and byobu . Here well show how to get started using screen Start a new screen: $ screen and press [Enter] to acknowledge the terms. You should now see a fresh session. In this session you can start your simulations. When the simulations are running, hit [Ctrl+a d] to \"detach\". You should now be in your login session again. Now try $ screen -ls There is a screen on: 1463 .pts-0.screen-test ( 09 /09/21 09 :48:48 ) ( Detached ) 1 Socket in /run/screen/S-ubuntu. and you should see a single screen that is detached. You can start multiple screens using screen again. To re-attach to a detached session, you can do: $ screen -r to reattach if you only have one screen, or: $ screen -r 146 or the few first characters of the screen name to re-attach a particular screen session. When attached, you can then inspect standard output for simulation progress. You can read more about screen on the internet, e.g. a guide or a cheatsheet As mentioned, you can also use more advanced session managers such as tmux and byobu . Please consult additional guides for this.","title":"Running long simulations"},{"location":"guides/openstack_guides/save_image/","text":"Save as image There are plenty reasons why you would save your instance as an image. It could be for a back-up to a known state, to distribute an environment etc. Step 1 Detach your volume Before creating an image of your volume so that you can download it, you need to detach the volume from your instance. First, let\u2019s stop your instance where the volume is attached too. You can view the instance name of your instance using the following command: openstack server list If the instance is still running you can Shut down your instance using the following command: openstack server stop <instance_name> Next, we need to detach the volume from the instance it is mounted on. First, let\u2019s check the volume ID $ openstack volume list You can detach the volume using the following command: $ nova volume-detach <instance_name> <volume_id> If the volume is detached, you can go to step 2 otherwise follow Step 1.1 STEP 1.1 To create an image of an attached volume, we are first going to create a snapshot from our bootable volume. After that, we are going to create a new volume from that snapshot. This way we have a volume that is unattached so that we can create an image of that volume. First, let\u2019s create a snapshot of the (bootable)volume openstack volume snapshot create --volume <volume_name> --force <snapshot_name> We can check the status here: openstack volume snapshot list Now let\u2019s create a new volume from our freshly made snapshot. Please note that the volume size should match the snapshot size. $ openstack volume create --snapshot <snapshot-name-or-id> --size <size> <new-volume-name> STEP 2 Create an image of your volume You can not download a volume in OpenStack, so we first have to create an image of your volume so that the image can be downloaded. Get your image ID using the following command: openstack volume list Create an image of your volume and give it a proper name using the following command. Be awear that using --disk-format qcow2 will reduce the size of the image. openstack image create --volume <volume_name> <your_image_name> --disk-format qcow2 You can check the status of your image using the following command: openstack image list","title":"Save instances as image"},{"location":"guides/openstack_guides/save_image/#save-as-image","text":"There are plenty reasons why you would save your instance as an image. It could be for a back-up to a known state, to distribute an environment etc.","title":"Save as image"},{"location":"guides/openstack_guides/save_image/#step-1-detach-your-volume","text":"Before creating an image of your volume so that you can download it, you need to detach the volume from your instance. First, let\u2019s stop your instance where the volume is attached too. You can view the instance name of your instance using the following command: openstack server list If the instance is still running you can Shut down your instance using the following command: openstack server stop <instance_name> Next, we need to detach the volume from the instance it is mounted on. First, let\u2019s check the volume ID $ openstack volume list You can detach the volume using the following command: $ nova volume-detach <instance_name> <volume_id> If the volume is detached, you can go to step 2 otherwise follow Step 1.1","title":"Step 1 Detach your volume"},{"location":"guides/openstack_guides/save_image/#step-11","text":"To create an image of an attached volume, we are first going to create a snapshot from our bootable volume. After that, we are going to create a new volume from that snapshot. This way we have a volume that is unattached so that we can create an image of that volume. First, let\u2019s create a snapshot of the (bootable)volume openstack volume snapshot create --volume <volume_name> --force <snapshot_name> We can check the status here: openstack volume snapshot list Now let\u2019s create a new volume from our freshly made snapshot. Please note that the volume size should match the snapshot size. $ openstack volume create --snapshot <snapshot-name-or-id> --size <size> <new-volume-name>","title":"STEP 1.1"},{"location":"guides/openstack_guides/save_image/#step-2-create-an-image-of-your-volume","text":"You can not download a volume in OpenStack, so we first have to create an image of your volume so that the image can be downloaded. Get your image ID using the following command: openstack volume list Create an image of your volume and give it a proper name using the following command. Be awear that using --disk-format qcow2 will reduce the size of the image. openstack image create --volume <volume_name> <your_image_name> --disk-format qcow2 You can check the status of your image using the following command: openstack image list","title":"STEP 2 Create an image of your volume"},{"location":"guides/openstack_guides/wcmd/","text":"SSH using Windows command If you're using a more recent version of Windows, you might have access to an OpenSSH client. SSH to instance You need to get the key as described in the quick start guide and save it as \"yourPersonalKey.pem\" Use Explorer and locate the directory of \"yourPersonalKey.pem\" Right click \"yourPersonalKey.pem\" and select Properties->Security->Edit and remove all users that are not you, SYSTEM or Administrator. Open Windows Command Prompt (CMD) and type ssh ubuntu@<your floating IP> -i <yourPersonalKey.pem> e.g. ssh ubuntu@130.226.98.166 -i yourPersonalKey.pem if you are located in the same directory as yourPersonalKey.pem file.","title":"Using Windows Command Prompt"},{"location":"guides/openstack_guides/wcmd/#ssh-using-windows-command","text":"If you're using a more recent version of Windows, you might have access to an OpenSSH client.","title":"SSH using Windows command"},{"location":"guides/openstack_guides/wcmd/#ssh-to-instance","text":"You need to get the key as described in the quick start guide and save it as \"yourPersonalKey.pem\" Use Explorer and locate the directory of \"yourPersonalKey.pem\" Right click \"yourPersonalKey.pem\" and select Properties->Security->Edit and remove all users that are not you, SYSTEM or Administrator. Open Windows Command Prompt (CMD) and type ssh ubuntu@<your floating IP> -i <yourPersonalKey.pem> e.g. ssh ubuntu@130.226.98.166 -i yourPersonalKey.pem if you are located in the same directory as yourPersonalKey.pem file.","title":"SSH to instance"},{"location":"test/test/","text":"Welcome to MkDocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Welcome to MkDocs"},{"location":"test/test/#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"test/test/#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"test/test/#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"}]}